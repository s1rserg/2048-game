{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\n/* eslint-disable function-paren-newline */ function $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\r\n * This class represents the game.\r\n * Now it has a basic structure, that is needed for testing.\r\n * Feel free to add more props and methods if needed.\r\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.initialState = initialState;\n        this.state = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        this.score = 0;\n        this.status = \"idle\";\n        this.dim = 4;\n        this.twoProbability = 0.9;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                return this.move(\"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                return this.move(\"right\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                return this.move(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                return this.move(\"down\");\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                if (this.status !== \"playing\") return false;\n                var needsTranspose = direction === \"up\" || direction === \"down\";\n                var swipeDirection = direction === \"up\" || direction === \"left\" ? \"left\" : \"right\";\n                var newState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                var matrix = newState;\n                if (needsTranspose) matrix = this.transpose(newState);\n                var didSwipe = this.swipeRows(swipeDirection, matrix);\n                var didMerge = this.combineRows(swipeDirection, matrix);\n                if (didMerge) this.swipeRows(swipeDirection, matrix);\n                if (didSwipe || didMerge) {\n                    if (needsTranspose) this.state = this.transpose(matrix);\n                    else this.state = matrix;\n                    this.generate();\n                    this.checkStatus();\n                    return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"swipeRows\",\n            value: function swipeRows() {\n                var direction = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"left\", matrix = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state;\n                var isChanged = false;\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    var _this = this, _loop = function() {\n                        var row = _step.value;\n                        var filteredRow = row.filter(function(num) {\n                            return num;\n                        });\n                        var missing = _this.dim - filteredRow.length;\n                        var zeros = Array(missing).fill(0);\n                        var newRow = direction === \"left\" ? filteredRow.concat(zeros) : zeros.concat(filteredRow);\n                        if (row.toString() !== newRow.toString()) {\n                            isChanged = true;\n                            for(var i = 0; i < _this.dim; i++)row[i] = newRow[i];\n                        }\n                    };\n                    for(var _iterator = matrix[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return isChanged;\n            }\n        },\n        {\n            key: \"combineRows\",\n            value: function combineRows() {\n                var direction = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"left\", matrix = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state;\n                var isChanged = false;\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = matrix[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        if (direction === \"left\") {\n                            for(var i = 0; i < this.dim; i++)if (row[i] !== 0 && row[i] === row[i + 1]) {\n                                if (row[i] === 1024) this.status = \"win\";\n                                isChanged = true;\n                                row[i] *= 2;\n                                row[i + 1] = 0;\n                                this.score += row[i];\n                                i++;\n                            }\n                        } else {\n                            for(var i1 = this.dim - 1; i1 >= 0; i1--)if (row[i1] !== 0 && row[i1] === row[i1 - 1]) {\n                                if (row[i1] === 1024) this.status = \"win\";\n                                isChanged = true;\n                                row[i1] *= 2;\n                                row[i1 - 1] = 0;\n                                this.score += row[i1];\n                                i1--;\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return isChanged;\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose(matrix) {\n                return matrix[0].map(function(_, colIndex) {\n                    return matrix.map(function(row) {\n                        return row[colIndex];\n                    });\n                });\n            }\n        },\n        {\n            key: \"generate\",\n            value: function generate() {\n                var emptyCells = [];\n                for(var i = 0; i < this.dim; i++){\n                    for(var j = 0; j < this.dim; j++)if (this.state[i][j] === 0) emptyCells.push([\n                        i,\n                        j\n                    ]);\n                }\n                var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), row = _emptyCells_Math_floor[0], col = _emptyCells_Math_floor[1];\n                this.state[row][col] = Math.random() < this.twoProbability ? 2 : 4;\n                return true;\n            }\n        },\n        {\n            key: \"checkStatus\",\n            value: function checkStatus() {\n                var _this = this;\n                var hasEmptyCell = this.state.some(function(row) {\n                    return row.includes(0);\n                });\n                var hasMergeableCells = this.state.some(function(row, rowIndex) {\n                    return row.some(function(cell, colIndex) {\n                        if (colIndex < _this.dim - 1 && cell === row[colIndex + 1]) return true;\n                        if (rowIndex < _this.dim - 1 && cell === _this.state[rowIndex + 1][colIndex]) return true;\n                        return false;\n                    });\n                });\n                if (!hasEmptyCell && !hasMergeableCells) this.status = \"lose\";\n            }\n        },\n        {\n            /**\r\n   * @returns {number}\r\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\r\n   * @returns {number[][]}\r\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\r\n   * Returns the current game status.\r\n   *\r\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\r\n   *\r\n   * `idle` - the game has not started yet (the initial state);\r\n   * `playing` - the game is in progress;\r\n   * `win` - the game is won;\r\n   * `lose` - the game is lost\r\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\r\n   * Starts the game.\r\n   */ key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.generate();\n                this.generate();\n            }\n        },\n        {\n            /**\r\n   * Resets the game.\r\n   */ key: \"restart\",\n            value: function restart() {\n                this.score = 0;\n                this.status = \"idle\";\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$scoreText = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$winMessage = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$loseMessage = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$tableRows = document.querySelector(\".game-field\").tBodies[0].rows;\nvar $197cd56b15c33885$var$renderState = function() {\n    var state = $197cd56b15c33885$var$game.getState();\n    for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n        if (!state[i][j]) {\n            $197cd56b15c33885$var$tableRows[i].children[j].textContent = \"\";\n            $197cd56b15c33885$var$tableRows[i].children[j].className = \"\";\n            $197cd56b15c33885$var$tableRows[i].children[j].classList.add(\"field-cell\");\n            continue;\n        }\n        $197cd56b15c33885$var$tableRows[i].children[j].textContent = state[i][j];\n        $197cd56b15c33885$var$tableRows[i].children[j].className = \"\";\n        $197cd56b15c33885$var$tableRows[i].children[j].classList.add(\"field-cell\", \"field-cell--\".concat(state[i][j]));\n    }\n};\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.getStatus() === \"idle\") {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n        $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n    } else {\n        $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$game.start();\n    }\n    $197cd56b15c33885$var$renderState();\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    var boardChanged = false;\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    if (gameStatus !== \"playing\") return;\n    switch(e.key){\n        case \"ArrowLeft\":\n            boardChanged = $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            boardChanged = $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            boardChanged = $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            boardChanged = $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    if (!boardChanged) return;\n    gameStatus = $197cd56b15c33885$var$game.getStatus();\n    if (gameStatus === \"win\") $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n    if (gameStatus === \"lose\") $197cd56b15c33885$var$loseMessage.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$scoreText.textContent = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$renderState();\n});\n\n})();\n//# sourceMappingURL=index.8570ee37.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst startButton = document.querySelector('.button');\nconst scoreText = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\nconst tableRows = document.querySelector('.game-field').tBodies[0].rows;\n\nconst renderState = () => {\n  const state = game.getState();\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (!state[i][j]) {\n        tableRows[i].children[j].textContent = '';\n        tableRows[i].children[j].className = '';\n\n        tableRows[i].children[j].classList.add('field-cell');\n        continue;\n      }\n      tableRows[i].children[j].textContent = state[i][j];\n      tableRows[i].children[j].className = '';\n\n      tableRows[i].children[j].classList.add(\n        'field-cell',\n        `field-cell--${state[i][j]}`,\n      );\n    }\n  }\n};\n\nstartButton.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    game.start();\n\n    startMessage.classList.add('hidden');\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n  } else {\n    loseMessage.classList.add('hidden');\n    winMessage.classList.add('hidden');\n    game.restart();\n    game.start();\n  }\n\n  renderState();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  let boardChanged = false;\n  let gameStatus = game.getStatus();\n\n  if (gameStatus !== 'playing') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      boardChanged = game.moveLeft();\n      break;\n    case 'ArrowRight':\n      boardChanged = game.moveRight();\n      break;\n    case 'ArrowUp':\n      boardChanged = game.moveUp();\n      break;\n    case 'ArrowDown':\n      boardChanged = game.moveDown();\n      break;\n  }\n\n  if (!boardChanged) {\n    return;\n  }\n\n  gameStatus = game.getStatus();\n\n  if (gameStatus === 'win') {\n    winMessage.classList.remove('hidden');\n  }\n\n  if (gameStatus === 'lose') {\n    loseMessage.classList.remove('hidden');\n  }\n\n  scoreText.textContent = game.getScore();\n  renderState();\n});\n","/* eslint-disable function-paren-newline */\r\n'use strict';\r\n\r\n/**\r\n * This class represents the game.\r\n * Now it has a basic structure, that is needed for testing.\r\n * Feel free to add more props and methods if needed.\r\n */\r\nclass Game {\r\n  /**\r\n   * Creates a new game instance.\r\n   *\r\n   * @param {number[][]} initialState\r\n   * The initial state of the board.\r\n   * @default\r\n   * [[0, 0, 0, 0],\r\n   *  [0, 0, 0, 0],\r\n   *  [0, 0, 0, 0],\r\n   *  [0, 0, 0, 0]]\r\n   *\r\n   * If passed, the board will be initialized with the provided\r\n   * initial state.\r\n   */\r\n  constructor(\r\n    initialState = [\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n    ],\r\n  ) {\r\n    this.initialState = initialState;\r\n    this.state = initialState.map((row) => [...row]);\r\n    this.score = 0;\r\n    this.status = 'idle';\r\n    this.dim = 4;\r\n    this.twoProbability = 0.9;\r\n  }\r\n\r\n  moveLeft() {\r\n    return this.move('left');\r\n  }\r\n\r\n  moveRight() {\r\n    return this.move('right');\r\n  }\r\n\r\n  moveUp() {\r\n    return this.move('up');\r\n  }\r\n\r\n  moveDown() {\r\n    return this.move('down');\r\n  }\r\n\r\n  move(direction) {\r\n    if (this.status !== 'playing') {\r\n      return false;\r\n    }\r\n\r\n    const needsTranspose = direction === 'up' || direction === 'down';\r\n    const swipeDirection\r\n      = direction === 'up' || direction === 'left' ? 'left' : 'right';\r\n    const newState = this.state.map((row) => [...row]);\r\n    let matrix = newState;\r\n\r\n    if (needsTranspose) {\r\n      matrix = this.transpose(newState);\r\n    }\r\n\r\n    const didSwipe = this.swipeRows(swipeDirection, matrix);\r\n    const didMerge = this.combineRows(swipeDirection, matrix);\r\n\r\n    if (didMerge) {\r\n      this.swipeRows(swipeDirection, matrix);\r\n    }\r\n\r\n    if (didSwipe || didMerge) {\r\n      if (needsTranspose) {\r\n        this.state = this.transpose(matrix);\r\n      } else {\r\n        this.state = matrix;\r\n      }\r\n\r\n      this.generate();\r\n      this.checkStatus();\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  swipeRows(direction = 'left', matrix = this.state) {\r\n    let isChanged = false;\r\n\r\n    for (const row of matrix) {\r\n      const filteredRow = row.filter((num) => num);\r\n      const missing = this.dim - filteredRow.length;\r\n      const zeros = Array(missing).fill(0);\r\n      const newRow\r\n        = direction === 'left'\r\n          ? filteredRow.concat(zeros)\r\n          : zeros.concat(filteredRow);\r\n\r\n      if (row.toString() !== newRow.toString()) {\r\n        isChanged = true;\r\n\r\n        for (let i = 0; i < this.dim; i++) {\r\n          row[i] = newRow[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    return isChanged;\r\n  }\r\n\r\n  combineRows(direction = 'left', matrix = this.state) {\r\n    let isChanged = false;\r\n\r\n    for (const row of matrix) {\r\n      if (direction === 'left') {\r\n        for (let i = 0; i < this.dim; i++) {\r\n          if (row[i] !== 0 && row[i] === row[i + 1]) {\r\n            if (row[i] === 1024) {\r\n              this.status = 'win';\r\n            }\r\n            isChanged = true;\r\n            row[i] *= 2;\r\n            row[i + 1] = 0;\r\n            this.score += row[i];\r\n            i++;\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = this.dim - 1; i >= 0; i--) {\r\n          if (row[i] !== 0 && row[i] === row[i - 1]) {\r\n            if (row[i] === 1024) {\r\n              this.status = 'win';\r\n            }\r\n            isChanged = true;\r\n            row[i] *= 2;\r\n            row[i - 1] = 0;\r\n            this.score += row[i];\r\n            i--;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return isChanged;\r\n  }\r\n\r\n  transpose(matrix) {\r\n    return matrix[0].map((_, colIndex) => matrix.map((row) => row[colIndex]));\r\n  }\r\n\r\n  generate() {\r\n    const emptyCells = [];\r\n\r\n    for (let i = 0; i < this.dim; i++) {\r\n      for (let j = 0; j < this.dim; j++) {\r\n        if (this.state[i][j] === 0) {\r\n          emptyCells.push([i, j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const [row, col]\r\n      = emptyCells[Math.floor(Math.random() * emptyCells.length)];\r\n\r\n    this.state[row][col] = Math.random() < this.twoProbability ? 2 : 4;\r\n\r\n    return true;\r\n  }\r\n\r\n  checkStatus() {\r\n    const hasEmptyCell = this.state.some((row) => row.includes(0));\r\n    const hasMergeableCells = this.state.some((row, rowIndex) => {\r\n      return row.some((cell, colIndex) => {\r\n        if (colIndex < this.dim - 1 && cell === row[colIndex + 1]) {\r\n          return true;\r\n        }\r\n\r\n        if (\r\n          rowIndex < this.dim - 1\r\n          && cell === this.state[rowIndex + 1][colIndex]\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      });\r\n    });\r\n\r\n    if (!hasEmptyCell && !hasMergeableCells) {\r\n      this.status = 'lose';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {number}\r\n   */\r\n  getScore() {\r\n    return this.score;\r\n  }\r\n\r\n  /**\r\n   * @returns {number[][]}\r\n   */\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  /**\r\n   * Returns the current game status.\r\n   *\r\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\r\n   *\r\n   * `idle` - the game has not started yet (the initial state);\r\n   * `playing` - the game is in progress;\r\n   * `win` - the game is won;\r\n   * `lose` - the game is lost\r\n   */\r\n  getStatus() {\r\n    return this.status;\r\n  }\r\n\r\n  /**\r\n   * Starts the game.\r\n   */\r\n  start() {\r\n    this.status = 'playing';\r\n    this.generate();\r\n    this.generate();\r\n  }\r\n\r\n  /**\r\n   * Resets the game.\r\n   */\r\n  restart() {\r\n    this.score = 0;\r\n    this.status = 'idle';\r\n    this.state = this.initialState.map((row) => [...row]);\r\n  }\r\n}\r\n\r\nmodule.exports = Game;\r\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","state","map","row","score","status","dim","twoProbability","key","value","move","direction","needsTranspose","swipeDirection","newState","matrix","transpose","didSwipe","swipeRows","didMerge","combineRows","generate","checkStatus","isChanged","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_this","_iterator","next","done","_loop","filteredRow","filter","num","missing","zeros","fill","newRow","concat","err","return","i1","_","colIndex","emptyCells","j","push","_emptyCells_Math_floor","Math","floor","random","_s","_e","_i","_arr","_n","_d","col","hasEmptyCell","some","includes","hasMergeableCells","rowIndex","cell","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$startButton","document","querySelector","$197cd56b15c33885$var$scoreText","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$tableRows","tBodies","rows","$197cd56b15c33885$var$renderState","getState","children","textContent","className","classList","add","addEventListener","getStatus","start","remove","restart","e","boardChanged","gameStatus","moveLeft","moveRight","moveUp","moveDown","getScore"],"version":3,"file":"index.8570ee37.js.map"}